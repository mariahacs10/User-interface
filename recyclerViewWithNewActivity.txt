2/15/2022

Video Link: https://www.youtube.com/watch?v=vBxNDtyE_Co

Step 1. Modify the activity_main and write:

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recyclerView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />


</androidx.constraintlayout.widget.ConstraintLayout>
(This will step up your recycler view)

Step 2. Create the layout for one list item
(Go create 2  layout resource files called list_items and profile_activity
You want to go under the list_items and write:)

(The adapter needs the layout for one item in the list. 
All the items use the same layout. You need to specify that list item layout in a separate layout resource file,
because it is used by the adapter, separately from the RecyclerView.)

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/textView3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="24dp"
        android:layout_marginTop="40dp"
        android:text="@string/anime_name"
        android:textColor="#633734"
        android:textSize="24sp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.0" />

    <TextView
        android:id="@+id/textView4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="176dp"
        android:layout_marginTop="40dp"
        android:textSize="14sp"
        android:textColor="#996a65"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.0" />
</androidx.constraintlayout.widget.ConstraintLayout>


Step 3. Create an adapter
 
(Go create 3 java classes called, ProfileActivity (used to open another activity), recyclerAdapter 
and User. Go Under the recyclerAdapter and write: )


import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;

/* This class is the adapter class

    Android uses adapters (from the Adapter class) to connect data with View items in a list.
    There are many different kinds of adapters available, and you can also write custom adapters.
    In this task you will create an adapter that associates your list of words with word list View items.

*/

public class recyclerAdapter extends RecyclerView.Adapter<recyclerAdapter.MyViewHolder> {
   
  (belongs to step 6)
    private ArrayList<User> usersList;


    private RecyclerViewClickListener listener;

    public recyclerAdapter(ArrayList<User> usersList, RecyclerViewClickListener listener)
    {
        this.usersList = usersList;
        this.listener = listener;
    }


Step 4. Create the Viewholder for the adapter

    /*You will need to create a ViewHolder for the adapter, this is a inner class inside the recyclerView*/

  					                     /* This Makes items respond to clicks***/
    public class MyViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener
    {
        private TextView nameTxt;

        public MyViewHolder(final View view)
        {
            super(view);
            nameTxt = view.findViewById(R.id.textView4);
            view.setOnClickListener(this);
        }

        @Override
        public void onClick(View view) {
            listener.onClick(view, getAdapterPosition());
        }
    }

    @NonNull
    @Override
    public recyclerAdapter.MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_items, parent, false);
        return new MyViewHolder(itemView);
    }

    @Override
    public void onBindViewHolder(@NonNull recyclerAdapter.MyViewHolder holder, int position) {
        String name = usersList.get(position).getUsername();
        holder.nameTxt.setText(name);
    }

    @Override
    public int getItemCount() {
        return usersList.size();
    }

    public interface RecyclerViewClickListener
    {
        void onClick(View v, int postion);
    }
}

Step 5,  Store your data in the adapter
private ArrayList<User> usersList;

Step 6: Go under the User java class and write:

public class User {

    private String username;

    public User(String username)
    {
        this.username = username;
    }

    public String getUsername()
    {
        return username;
    }

    public void setUsername(String username)
    {
        this.username = username;
    }
}

Step 7. Go under the ProfileActivity and write:

import android.os.Bundle;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class ProfileActivity extends AppCompatActivity
{
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.profile_activity);

        TextView nameTxt = findViewById(R.id.nameTextView);

        String username = "Username not set";

        Bundle extras = getIntent().getExtras();
        if(extras != null)
        {
            username = extras.getString("username");
        }

        nameTxt.setText(username);

    }
}



Step 8.Now you want to go under the profile_activity.xml and write:

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/nameTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/textview"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.5"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout> 

Step 9. Now you want to go to where the MainActivity and this is where you need to put the recyclerView in the MainActivity
package com.example.recyclerview;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.DefaultItemAnimator;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;


import android.content.Intent;
import android.os.Bundle;
import android.view.View;

import java.sql.Array;
import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    private ArrayList<User> usersList;
    private RecyclerView recyclerView;
    private recyclerAdapter.RecyclerViewClickListener listener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        recyclerView = findViewById(R.id.recyclerView);
        usersList = new ArrayList<>();

        setUserInfo();
        setAdapter();
    }

    private void setAdapter() {
        setOnClickListener();
        recyclerAdapter adapter = new recyclerAdapter(usersList, listener);
        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(getApplicationContext());
        recyclerView.setLayoutManager(layoutManager);
        recyclerView.setItemAnimator(new DefaultItemAnimator());
        recyclerView.setAdapter(adapter);
    }

    private void setOnClickListener()
    {
        listener = new recyclerAdapter.RecyclerViewClickListener() {
            @Override
            public void onClick(View v, int postion) {
                Intent intent = new Intent(getApplicationContext(), ProfileActivity.class);
                intent.putExtra("username", usersList.get(postion).getUsername());
                startActivity(intent);
            }
        };
    }

    private void setUserInfo() {
        usersList.add(new User("Killua"));
        usersList.add(new User("Hisoka"));
        usersList.add(new User("Kurapika"));
        usersList.add(new User("Gon"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Sakura"));
        usersList.add(new User("Sasuke"));
        usersList.add(new User("Kakashi"));
        usersList.add(new User("Levi"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Kakashi"));
        usersList.add(new User("Gon"));
        usersList.add(new User("Gon"));
        usersList.add(new User("Kurapika"));
        usersList.add(new User("Kurapika"));
    }
}
(Btw you dont need this many names i just have it in this example)

But this should work :)

