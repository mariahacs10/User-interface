2/13/2022

Video link: https://www.youtube.com/watch?v=__OMnFR-wZU&t=382s

RecyclerView makes it easy to efficiently display large sets of data and
RecyclerView class extends the ViewGroup class that implements 
the ScrollingView interface.

Step 1. 
(I tried to follow this codelab:  https://developer.android.com/codelabs/android-training-create-recycler-view?index=..%2F..%2Fandroid-training#3
they asked to modify the activity_main.xml
<android.support.v7.widget.RecyclerView
        android:id="@+id/recyclerview"
        android:layout_width="match_parent"
        android:layout_height="match_parent">
</android.support.v7.widget.RecyclerView>
that did NOT work)

This is what i used:

<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recyclerView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />


</androidx.constraintlayout.widget.ConstraintLayout>

Step 2. Create another xml file

The adapter needs the layout for one item in the list.
All the items use the same layout. You need to specify that list item 
layout in a separate layout resource file,
because it is used by the adapter, separately from the RecyclerView.

And in this case we are going to call it list_items.xml:

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/textView3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="24dp"
        android:layout_marginTop="40dp"
        android:text="Username"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.0" />

    <TextView
        android:id="@+id/textView4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="120dp"
        android:layout_marginTop="40dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.0" />
</androidx.constraintlayout.widget.ConstraintLayout>

Step 3. Create a Adapter (its a java class called recyclerAdapter)

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;

/* This class is the adapter class
    
    Android uses adapters (from the Adapter class) to connect data with View items in a list.
    There are many different kinds of adapters available, and you can also write custom adapters. 
    In this task you will create an adapter that associates your list of words with word list View items. 

*/

public class recyclerAdapter extends RecyclerView.Adapter<recyclerAdapter.MyViewHolder> {

You need to hold your data, and recyclerAdapter needs a constuctor
that initializes the word list from the data. follow these steps.

1. To hold your data in the adapter, create a private linked list of string in
recyclerAdapter and call it usersList:

    private ArrayList<User> usersList;

    public recyclerAdapter(ArrayList<User> usersList)
    {
        this.usersList = usersList;
    }
    
    //This will be a inner class and it is a ViewHolder above
    public class MyViewHolder extends RecyclerView.ViewHolder
    {
        private TextView nameTxt;

        public MyViewHolder(final View view)
        {
            super(view);
            nameTxt = view.findViewById(R.id.textView4);
        }

    }

    @NonNull
    @Override
    public recyclerAdapter.MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_items, parent, false);
        return new MyViewHolder(itemView);
    }

    @Override
    public void onBindViewHolder(@NonNull recyclerAdapter.MyViewHolder holder, int position) {
        String name = usersList.get(position).getUsername();
        holder.nameTxt.setText(name);
    }

    @Override
    public int getItemCount() {
        return usersList.size();
    }
}

Step 4. create a ViewHolder for the adapter:

   //This will be a inner class inside the recyclerAdapter
    public class MyViewHolder extends RecyclerView.ViewHolder
    {
        private TextView nameTxt;

        public MyViewHolder(final View view)
        {
            super(view);
            nameTxt = view.findViewById(R.id.textView4);
        }

Step 5.  Go create another java class called User and write:
package com.example.recyclerview;

public class User {

    private String username;

    public User(String username)
    {
        this.username = username;
    }

    public String getUsername()
    {
        return username;
    }

    public void setUsername(String username)
    {
        this.username = username;
    }
}

Step 6. Go under the MainActivity.java class and setup
your adapter and everything:

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.DefaultItemAnimator;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.os.Bundle;

import java.sql.Array;
import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    private ArrayList<User> usersList;
    private RecyclerView recyclerView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        recyclerView = findViewById(R.id.recyclerView);
        usersList = new ArrayList<>();

        setUserInfo();
        setAdapter();
    }

    private void setAdapter() {
        recyclerAdapter adapter = new recyclerAdapter(usersList);
        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(getApplicationContext());
        recyclerView.setLayoutManager(layoutManager);
        recyclerView.setItemAnimator(new DefaultItemAnimator());
        recyclerView.setAdapter(adapter);
    }

    private void setUserInfo() {
        usersList.add(new User("Killua"));
        usersList.add(new User("Hisoka"));
        usersList.add(new User("Kurapika"));
        usersList.add(new User("Gon"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Sakura"));
        usersList.add(new User("Sasuke"));
        usersList.add(new User("Kakashi"));
        usersList.add(new User("Levi"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Naruto"));
        usersList.add(new User("Kakashi"));
        usersList.add(new User("Kakashi"));
        usersList.add(new User("Kakashi"));
        usersList.add(new User("Kakashi"));
        usersList.add(new User("Gon"));
        usersList.add(new User("Gon"));
        usersList.add(new User("Gon"));
        usersList.add(new User("Gon"));
        usersList.add(new User("Kurapika"));
        usersList.add(new User("Kurapika"));
        usersList.add(new User("Kurapika"));
        usersList.add(new User("Kurapika"));
        usersList.add(new User("Kurapika"));

    }
}

